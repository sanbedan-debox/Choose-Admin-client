# Queries

# Query to get the currently logged-in admin's details
query Me {
  me {
    _id
    name
    role
  }
}

mutation addAdmin($input: AddAdminInput!) {
  addAdmin(input: $input)
}

# Query to get a list of all admins
query GetAdmins {
  getAdmins {
    _id
    name
    email
    role
    numberOfResetPassword
    createdAt
    updatedAt
    status
  }
}

# Query to log in an admin
query AdminLogin($email: String!, $password: String!) {
  adminLogin(email: $email, password: $password)
}

# # Query to get all restaurant users

query GetAllRestaurantUsers {
  getAllRestaurantUsers {
    _id
    email
    phone
    createdAt
    updatedAt
    status
    firstName
    lastName
  }
}
# Query to get all restaurants
query GetAllRestaurants {
  getAllRestaurants {
    _id
    status
    name {
      value
    }
    address {
      addressLine1 {
        value
      }
      addressLine2 {
        value
      }
      city {
        value
      }
      state {
        value
      }
      postcode {
        value
      }
      place {
        displayName
      }
    }
    timezone {
      value
    }
    beverageCategory
    foodType
    meatType
    website
    category
    type
  }
}

# query to reset an admin's password
query resetPasswordAdmin($id: String!, $password: String!) {
  resetPasswordAdmin(id: $id, password: $password)
}

# Mutations

# Mutation to delete an admin by ID
mutation DeleteAdmin($id: String!) {
  deleteAdmin(id: $id)
}

# Mutation to change an admin's role
mutation ChangeRole($id: String!, $role: AdminRole!) {
  changeRole(id: $id, role: $role)
}

mutation changeUserStatus($id: String!) {
  changeUserStatus(id: $id)
}

mutation changeRestaurantStatus($id: String!) {
  changeRestaurantStatus(id: $id)
}

mutation blockAdmin($id: String!, $updateStatus: PlatformStatus!) {
  blockAdmin(id: $id, updateStatus: $updateStatus)
}

# Mutation to block/unblock an admin
# mutation BlockAdmin($id: String!, $updateStatus: PlantFormStatus!) {
#   blockAdmin(id: $id, updateStatus: $updateStatus)
# }

# Mutation to log out the admin
query AdminLogout {
  adminLogout
}

mutation AdminUserDetailsVerification($id: String!) {
  adminUserDetailsVerification(id: $id)
}

mutation AdminUserDetailsRejection($content: String!, $id: String!) {
  adminUserDetailsRejection(content: $content, id: $id)
}

query GetUsersForTarget($target: EmailCampaignTargetTypes!) {
  getUsersForTarget(target: $target)
}
